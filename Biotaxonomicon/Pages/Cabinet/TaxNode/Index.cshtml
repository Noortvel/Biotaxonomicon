@page
@model Biotaxonomicon.Pages.Cabinet.TaxNode.IndexModel
@{
    ViewData["Title"] = "Index";
}
@section Styles{
    <style>
        .treeCSS,
        .treeCSS ul,
        .treeCSS li {
            margin: 0;
            padding: 0;
            line-height: 1;
            list-style: none;
        }

            .treeCSS ul {
                margin: 0 0 0 .5em; /* вести линию вниз где-то с полбуквы родителя */
            }

            .treeCSS > li:not(:only-child),
            .treeCSS li li {
                position: relative;
                padding: .2em 0 0 1.2em; /* отступ до текста; для раскрывающегося списка в ряде случаев (в Хроме есть баг) padding-top (.2em) лучше указывать в px */
            }

            .treeCSS li:not(:last-child) {
                border-left: 1px solid #ccc; /* толщина, цвет и стиль (вместо сплошной пунктирная или точечная) вертикальной линии */
            }

            .treeCSS li li:before,
            .treeCSS > li:not(:only-child):before { /* горизонтальная линия */
                content: "";
                position: absolute;
                top: 0;
                left: 0;
                width: 1.1em; /* не более отступа до текста (1.2em) */
                height: .7em; /* начинается приблизительно с половины высоты буквы (.5em + .2em) */
                border-bottom: 1px solid #ccc;
            }

            .treeCSS li:last-child:before { /* вертикальная линия последнего пункта в каждом списке */
                width: calc(1.1em - 1px); /* для перфекционистов */
                border-left: 1px solid #ccc;
            }
    </style>
}
<h1>Редактор таксон. узлов</h1>
<a class="btn btn-outline-primary" asp-page="./Create" role="button">Создать</a>
<div>
    <ul class="treeCSS">
        @*@Html.ShowSubItems(Model.Root)*@
        @{
            
           await RenderTree(Model.Root);
        }
    </ul>
</div>
@{
    async Task RenderTree(Models.TaxNodeElement elem)
    {
    <li>
        @elem.Article.Header
        @if (elem.Node.ParentNodeId > 0)
        {
            <a class="btn-sm btn-secondary" asp-page="./Edit" asp-route-id="@elem.Node.Id" role="button">Редактировать</a>
            <a class="btn-sm btn-danger" asp-page="./Delete" asp-route-id="@elem.Node.Id" role="button">Удалить</a>
        }
        @if (elem.Childs.Count > 0)
        {
        <ul>
            @foreach (var x in elem.Childs)
                {
                    await RenderTree(x);
                }
        </ul>
        }
    </li>
    }
}